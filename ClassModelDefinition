//// -- LEVEL 1
//// -- Tables and References

// Creating tables
Table users as U {
  id int [pk, increment] // auto-increment
  first_name varchar
  last_name varchar
  created_at timestamp
  home_id int [ref:> H.id]
  owned_home_id int [ref:> H.id]
  //this is part of django model
  //so will leave as it is
}

Table homes as H{
  id int [pk]
  address varchar
  zip_code varchar
  country_code varchar
  geo_location location

}

Table things {

  id int [pk]
  manufacturer varchar
  manufacturing_date date
  expiry_date date
  model_number varchar
  serial_number varchar
  life_expectancy integer
  power_rating varchar
  alertable boolean
  trend_applicable boolean
  geo_location location
  installed_home int [ref: > H.id]

}




// Creating references
// You can also define relaionship separately
// > many-to-one; < one-to-many; - one-to-one
// Ref: U.country_code > countries.code
// Ref: merchants.country_code > countries.code

//----------------------------------------------//

//// -- LEVEL 2
//// -- Adding column settings

Table order_items {
  order_id int [ref: > orders.id]
  product_id int
  quantity int [default: 1] // default value
}

Ref: order_items.product_id > products.id

Table orders {
  id int [pk] // primary key
  user_id int [not null, unique]
  status varchar
  created_at varchar [note: 'When order created'] // add column note
}

//----------------------------------------------//

//// -- Level 3
//// -- Enum, Indexes

// Enum for 'products' table below
Enum products_status {
  out_of_stock
  in_stock
  running_low [note: 'less than 20'] // add column note
}

// Indexes: You can define a single or multi-column index
Table products {
  id int [pk]
  name varchar
  merchant_id int [not null]
  price int
  status products_status
  created_at datetime [default: `now()`]

  Indexes {
    (merchant_id, status) [name:'product_status']
    id [unique]
  }
}

// Ref: products.merchant_id > merchants.id // many-to-one
